"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return s}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),m=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=m(r),s=a,h=p["".concat(c,".").concat(s)]||p[s]||u[s]||o;return r?n.createElement(h,i(i({ref:t},d),{},{components:r})):n.createElement(h,i({ref:t},d))}));function s(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},687:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return d},default:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={title:"Charmil CLI",slug:"/charmil_cli"},c=void 0,m={unversionedId:"charmil_cli",id:"charmil_cli",isDocsHomePage:!1,title:"Charmil CLI",description:"Note: Charmil CLI is under development",source:"@site/../docs/src/charmil_cli.md",sourceDirName:".",slug:"/charmil_cli",permalink:"/charmil/docs/charmil_cli",version:"current",frontMatter:{title:"Charmil CLI",slug:"/charmil_cli"},sidebar:"main",previous:{title:"Charmil Validator Quickstart",permalink:"/charmil/docs/validator_quickstart"},next:{title:"Charmil CRUD Generator Command",permalink:"/charmil/docs/charmil_cli_crud"}},d=[{value:"Init Command",id:"init-command",children:[]},{value:"Add Command",id:"add-command",children:[]},{value:"Crud Command",id:"crud-command",children:[]}],u={toc:d};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: Charmil CLI is under development")),(0,o.kt)("p",null,"Charmil CLI provides a way to create and manage the Charmil project. CLI gives you preconfigured shell commands as recommended by Charmil, so you don't have to integrate charmil core yourself. Available commands are:"),(0,o.kt)("h2",{id:"init-command"},"Init Command"),(0,o.kt)("p",null,"Init command initializes a Charmil project boilerplate(starter). This will generate shell commands, readme, licence, etc to get you started easily."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ charmil init\n")),(0,o.kt)("p",null,"Fill in the prompted info(github owner, repository and cli name) to get started!"),(0,o.kt)("h2",{id:"add-command"},"Add Command"),(0,o.kt)("p",null,"Add command adds a new command into the CLI, along with english locales for the command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ charmil add --cmdName="mycmd"\n')),(0,o.kt)("p",null,"if you want to specify the path for command to be created, use ",(0,o.kt)("inlineCode",{parentName:"p"},"--cmdPath")," flag. By default ",(0,o.kt)("inlineCode",{parentName:"p"},"--cmdPath")," is set to current directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ charmil add --cmdName="mycmd" --cmdPath="./cmd"\n')),(0,o.kt)("h2",{id:"crud-command"},"Crud Command"),(0,o.kt)("p",null,"Helps developers generate CRUD commands for their CLI."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"link-to-detailed-documentation-on-the-charmil-crud-command"},(0,o.kt)("a",{parentName:"h4",href:"/charmil/docs/charmil_cli_crud"},"Link to detailed documentation on the Charmil CRUD Command")))))}p.isMDXComponent=!0}}]);